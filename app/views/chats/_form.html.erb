<%= form_with url: chats_path, local: false, class: "bg-white rounded-lg shadow-lg p-4", id: "chat-form", data: { controller: "chat", action: "submit->chat#submit" } do |f| %>
  <div class="flex flex-col sm:flex-row items-center space-y-2 sm:space-y-0 sm:space-x-2">
    <%= f.text_area :content, placeholder: 'Type your message here', class: "w-full p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 resize-none", rows: 2, id: "chat-input", data: { chat_target: "input" } %>
    <%= f.submit 'Send', class: "w-full sm:w-auto bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-6 rounded-lg transition duration-300 focus:outline-none focus:ring-2 focus:ring-blue-700 focus:ring-offset-2", id: "chat-submit" %>
  </div>
<% end %>

<script>
document.addEventListener('turbo:load', function() {
  const form = document.getElementById('chat-form');
  const input = document.getElementById('chat-input');
  const submit = document.getElementById('chat-submit');
  const chatMessages = document.getElementById('chat-messages');

  function scrollToBottom() {
    chatMessages.scrollTop = chatMessages.scrollHeight;
  }

  function animateNewMessage() {
    const lastMessage = chatMessages.lastElementChild;
    if (lastMessage) {
      lastMessage.classList.add('animate-new-message');
      setTimeout(() => {
        lastMessage.classList.remove('animate-new-message');
      }, 500);
    }
  }

  input.addEventListener('keydown', function(e) {
    if (e.key === 'Enter' && !e.shiftKey) {
      e.preventDefault();
      submit.click();
    }
  });

  form.addEventListener('turbo:submit-end', function(e) {
    input.value = '';
    input.style.height = 'auto';
    scrollToBottom();
  });

  // Listen for new messages and scroll to bottom
  const observer = new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {
      if (mutation.type === 'childList' && mutation.addedNodes.length > 0) {
        scrollToBottom();
        animateNewMessage();
      }
    });
  });

  observer.observe(chatMessages, { childList: true });
});
</script>
